
Arithmatic operators
 +
 -
 *
 /   (Floating point divide)
 //  (Integer divide round to zero)
 +/ (Integer divide round towards +infinity)
 -/ (Integer divide round towards -infinity)
 %% (Modulo, such that b*(a//b) + a%%b = a
 +%
 -%

 ^  (Exponentiation)
FIXME ^^ (Integer Exponentiation) ???

Bit twiddling and logic
 <<
 >>
 &
 |
 ^| (XOR)
 !
FIXME separate "early out" operators '&&' and '||' ?
      and maybe a casting early out OR named ? optimized for error handling:
      err ?= ThingThatReturnsError();
      means err = err ? ThingThatReturnsError();
      which means if err converts to true, keep err, otherwise
      run ThingThatReturnsError() and assign the result to err
      This should work for non-bool types that have a conversion to bool


Comparisons
 ==  <=  >=  !=   value comparison (works on primitives and when defined)
 ~~  !~  reference comparison, works on ref, m_ref and interface types

