; 
; global declarations
; 
declare double @llvm.sqrt.f64(double)
declare void @clib_print_Real64(double)
declare void @clib_print_Int64(i64)
; 
; generating variables for marray
; 
@d_marray.ar = global [5 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5]
@d_marray.ar2 = global [3 x double] [double 0x3ff0000000000000, double 0x4000000000000000, double 0x4008000000000000]
; 
; generating variables for @root
; 
; 
; generating functions for marray
; 
define void @f_marray.Main-FUNCTION-VOID$$(
) {
	%x_0 = alloca i32
	%loc_4 = alloca [2 x i32]

	store i32 93, i32* %x_0
	%tmp_1 = insertvalue [2 x i32] zeroinitializer, i32 1, 0
	%tmp_2 = load i32, i32* %x_0
	%tmp_3 = insertvalue [2 x i32] %tmp_1, i32 %tmp_2, 1
	store [2 x i32] %tmp_3, [2 x i32]* %loc_4

	ret void
}
; 
; generating functions for @root
; 
; 
; main entrypoint
; 
@janus_main = alias void(), void()* @f_marray.Main-FUNCTION-VOID$$
